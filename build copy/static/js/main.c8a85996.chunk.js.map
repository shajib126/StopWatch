{"version":3,"sources":["Components/Title/Title.js","Components/CountDown/Digit/Digit.js","Components/CountDown/CountDown.js","Components/CountDown/Controller/Controller.js","Components/Lap/Lap.js","Components/App.js","serviceWorker.js","index.js"],"names":["Title","props","state","title","isInput","this","setState","event","key","e","target","value","output","type","onChange","inputChange","onBlur","onBlurEvent","onKeyPress","editEvent","className","onClick","eventHandle","src","alt","Component","Digit","style","borderColor","color","CountDown","time","min","sec","mili","Controller","start","reset","stop","lap","getStarted","getPause","getLap","getReset","startHandler","stopHandler","lapHanndler","resetHandler","getController","Lap","map","index","App","intervalID","setInterval","clearInterval","bind","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c8a85996.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Title.css'\r\n\r\nclass Title extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            title:'this is dummy title',\r\n            isInput:false\r\n        }\r\n    }\r\n    eventHandle(){\r\n        this.setState({\r\n            ...this.state,\r\n            isInput:true\r\n        })\r\n    }\r\n    editEvent(event){\r\n        if(event.key === 'Enter'){\r\n            this.setState({\r\n                ...this.state,\r\n                isInput:false\r\n            })\r\n        }\r\n        \r\n    }\r\n    inputChange(e){\r\n        this.setState({\r\n            title:e.target.value\r\n        })\r\n    }\r\n    onBlurEvent(){\r\n        this.setState({\r\n        ...this.setState,\r\n        isInput:false\r\n        })\r\n    }\r\n    render() {\r\n            let output=null\r\n            if(this.state.isInput){\r\n                output = <input type=\"text\" \r\n                onChange={(event)=> this.inputChange(event)}\r\n                onBlur={(event)=>this.onBlurEvent(event)}\r\n                onKeyPress={(event)=> this.editEvent(event)}\r\n                value={this.state.title}/>\r\n            }else{\r\n                output=(\r\n                    <div className=\"d-flex py-10 title\">\r\n                        <h1 className=\"display-4\">{this.state.title}</h1>\r\n                        \r\n                        <img className=\"icon ml-auto\"\r\n                        \r\n                        onClick={()=>this.eventHandle()}\r\n                        \r\n                         src=\"https://img.icons8.com/cotton/2x/edit--v1.png\" alt=\"\"/>\r\n                    </div>\r\n                )\r\n            }     \r\n        \r\n        return (\r\n            <div>\r\n                {output}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport './Digit.css'\r\n\r\nconst Digit = (props) => {\r\n    return (\r\n        <div className=\"digit mx-3 text-center\" style={{borderColor:props.color}}>\r\n            <h1 className=\"display-2 py-3\" style={{color:props.color}}>\r\n                {props.value < 10 ? `0${props.value}` : props.value}\r\n                \r\n                </h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Digit;","import React from 'react';\r\nimport Digit from './Digit/Digit';\r\n\r\nconst CountDown = (props) => {\r\n    return (\r\n        <div className=\"d-flex py-4\">\r\n            <Digit color=\"palegreen\" value={props.time.min}></Digit>\r\n            <Digit color=\"skyblue\" value={props.time.sec}></Digit>\r\n            <Digit color=\"salmon\" value={props.time.mili}></Digit>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountDown;","import React, { Component } from 'react';\r\n\r\nclass Controller extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            start:true,\r\n            reset:false,\r\n            stop:false,\r\n            lap:false\r\n        }\r\n    }\r\n\r\n    startHandler(){\r\n        this.setState({\r\n            ...this.state,\r\n            start:false,\r\n            stop:true,\r\n            lap:true\r\n        })\r\n        this.props.getStarted()\r\n    }\r\n\r\n    stopHandler(){\r\n        this.setState({\r\n            ...this.state,\r\n            start:true,\r\n            stop:false,\r\n            lap:false,\r\n            reset:true\r\n        })\r\n        this.props.getPause()\r\n    }\r\n\r\n    lapHanndler(){\r\n        this.props.getLap()\r\n    }\r\n\r\n    resetHandler(){\r\n        this.setState({\r\n            start:true,\r\n            reset:false,\r\n            stop:false,\r\n            lap:false\r\n        })\r\n        this.props.getReset()\r\n    }\r\n\r\n    getController(){\r\n        let output = null\r\n        if(this.state.start && !this.state.reset){\r\n            output = (\r\n                <div>\r\n                    <button className=\"btn btn-success btn-lg px-5 ml-5\"\r\n                    onClick={event => this.startHandler()}\r\n                    >Start</button>\r\n                </div>\r\n            )\r\n        }else if(this.state.stop && this.state.lap){\r\n\r\n            output = (<div className=\"my-5\">\r\n                    <button className=\"btn btn-warning btn-lg px-5 ml-5\"\r\n                    onClick={event => this.stopHandler()}\r\n                    >Pause</button>\r\n\r\n                    <button className=\"btn btn-primary btn-lg px-5 ml-5\"\r\n                    onClick={event => this.lapHanndler()}\r\n                    >Lap</button>\r\n                </div>)\r\n\r\n        }else if(this.state.start && this.state.reset){\r\n            output = (\r\n                <div>\r\n                    <button className=\"btn btn-success btn-lg px-5 ml-5\"\r\n                    onClick={event => this.startHandler()}\r\n                    >Start</button>\r\n\r\n                    <button className=\"btn btn-danger btn-lg px-5 ml-5\"\r\n                    onClick={event => this.resetHandler()}\r\n                    >reset</button>\r\n                </div>\r\n            )\r\n        }\r\n        return output\r\n    }\r\n    render() {\r\n        return this.getController()\r\n    }\r\n}\r\n\r\nexport default Controller;","import React from 'react';\r\n\r\nconst Lap = (props) => {\r\n    return (\r\n        <div>\r\n           <ul className=\"list-group list-group-flush\">\r\n               {\r\n                   props.lap.map((lap, index) => {\r\n                       return (\r\n                           <li key={index} className=\"list-group-item\">\r\n                               <h4>\r\n                               <span className=\"text-dark\">Minute: </span>\r\n                               <span className=\"text-danger mx-5\">{lap.min}</span>\r\n                               <span className=\"text-dark\">Second: </span>\r\n                               <span className=\"text-danger mx-5\">{lap.sec}</span>\r\n                               <span className=\"text-dark\">Mili: </span>\r\n                               <span className=\"text-danger mx-5\">{lap.mili}</span>\r\n                               </h4>\r\n                           </li>\r\n                       )\r\n                   })\r\n               }\r\n           </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Lap;","import React, { Component } from 'react';\nimport Title from './Title/Title';\nimport CountDown from './CountDown/CountDown';\nimport Controller from './CountDown/Controller/Controller';\nimport Lap from './Lap/Lap';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      time:{\n        min:0,\n        sec:0,\n        mili:0\n      },\n      lap:[]\n    }\n  }\n  getStarted(){\n    this.intervalID = setInterval(()=>{\n      let min = this.state.time.min\n      let sec = this.state.time.sec\n      let mili = this.state.time.mili\n      if(mili >= 10){\n        sec = sec + 1;\n        mili = 0\n      }if(sec >= 60){\n        min = min + 1;\n        sec = 0;\n      }\n      this.setState({\n        ...this.state,\n        time:{min,\n        sec,\n        mili:mili + 1}\n      })\n    },100)\n  }\n  getPause(){\n    clearInterval(this.intervalID)\n  }\n  \n  getLap(){\n    let time = {\n      ...this.state.time\n    }\n    this.setState({\n      ...this.state,\n      lap:[...this.state.lap, time]\n      \n    })\n   \n  }\n\n\n  getReset(){\n    this.setState({\n      time:{\n        min:0,\n        sec:0,\n        mili:0\n      },\n      lap:[]\n    })\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-8\">\n          <Title></Title>\n          <CountDown time={this.state.time}></CountDown>\n          <Controller getStarted = {this.getStarted.bind(this)}\n          getPause={this.getPause.bind(this)}\n          getReset={this.getReset.bind(this)}\n          getLap={this.getLap.bind(this)}\n          ></Controller>\n          <Lap className=\"my-5\" lap={this.state.lap}></Lap>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App'\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}